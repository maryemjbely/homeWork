closure:
function makeAccount(initial) {
    var balance = initial
   var obj={} 
function withdraw(amount) {
           if (balance - amount >= 0) {
         balance = balance - amount;
       return 'Hereâ€™s your money: $' + amount;
       }
       return 'Insufficient funds.';
       }
function deposit(amount) {
             balance = balance + amount;
         return 'Your balance is: $' + balance;
         }
function checkBalance (){
       return 'your balance is :${balance}'
         }
         obj.withdraw=withdraw 
         obj.deposit=deposit
         obj.checkBalance=balance

  return obj 
}
function makeCounter(initial) {
  var count = initial
  var obj={}
 function up () {
    count=count+1
    return count
}
 function down () {
    count=count-1
    return count  
}
obj.up=up
obj.down=down
return obj
}
function makeCounter(initial) {
  var count = initial
  var obj={}
 function up () {
    count=count+1
    return count
}
 function down () {
    count=count-1
    return count  
}
function reset () {
  return count=initial
}
obj.up=up
obj.down=down
obj.reset=reset
return obj
}
function guesseNumber(upperbound) {
      var random=Math.floor(Math.random() * (upperbound + 1))
   function guessMyNumber(n){
         if (n > upperbound) {
       return 'Out of bounds! Please try a number between 0 and ' + upperbound + '.';
    } 
         else if (n ===random) {
           return 'You guessed my number! exactly '
    }
      return "Nope! That wasn t it but it was : "
    }
    return guesseNumber
   }
   function makeGame(upperbound) {
    var random=Math.floor(Math.random() * (upperbound + 1))
    console.log("the upper bound is "+upperbound)
    var highscore=5
    var chance=0
    return {
        play:function (n){
        if (chance===5) {
            return "you reach the maximum of chances please reset the game"
        }
        if (n > upperbound) {
            return 'Out of bounds! Please try a number between 0 and ' + upperbound + '.'
         } 
       else if (n ===random) {
            chance++
            if (chance<highscore){
                highscore=chance
                return "you guessed my number and you set new highscore :"+highscore
            }
            return 'You guessed my number! exactly '+random
         }
        chance++
        if (chance===5) {

            console.log("Nope! That wasn t it")
            return "you reach the maximum of chances please reset the game"
        }
        return "Nope! That wasn t it"
        },
        over:function(){
            return "you give up and the random number was :"+random
        },
        numGuesses:function(){
            return"you have now done "+chance+" guesses"
        },
        reset:function(){
            random=Math.floor(Math.random() * (upperbound + 1))
            chance=0
            return "the game is reset and now you have new random number"
        },
        score:function(){
            return "the best score for now is "+highscore
        }

    }
}
function MakeAccount(initial) {
    var makeAccount={};
   MakeAccount.balance=initial
   MakeAccount.withdraw=withdraw
   MakeAccount.deposit=deposit
return MakeAccount
}
   
   
var withdraw= function(amount) {
              if (this.balance - amount >= 0) {
                   this.balance = this.balance - amount;
                   return 'Here is your money: $' + amount;
}
}
var deposit=function (amount){
    this.balance = this.balance + amount;
              return 'Your balance is: $' + this.balance;
}
classes:
function MakeStopwatch() {
    var makeStopWatch={}
     makeStopWatch.start=start
    makeStopWatch.stop=0
        makeStopWatch.reset=reset
     makeStopWatch.time = 0
    makeStopWatch.pos=pos
return makeStopWatch
}
  var start= function() {
  var objAss=this
                objAss.stop =  setInterval(function() {
               objAss.time = objAss.time + 1;
               console.log('Elapsed time: ' + objAss.time + 's.');
               } , 1000)}
 var pos= function() {
                clearInterval(this.stop);
          }
var reset= function() {
               clearInterval=(this.stop);
               this.time = 0;
          }


function Toaster(toast) {
    var instance={}
    instance.addToast=addToast
    return instance
    
}
var addToast=function (toast) {
    return this.toast=toast    
}
  

